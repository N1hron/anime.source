:root {
  --anime-search-status-color: var(--color-accent-500);

  &:has(.error) {
    --anime-search-status-color: var(--color-red-500);
  }

  &:has(.not-found) {
    --anime-search-status-color: var(--color-indigo-500);
  }
}

.input {
  max-width: var(--search-width);
  width: 100%;
  padding: 0 1rem;
  transition-property: padding;

  & input {
    width: 100%;
    transition-property: box-shadow, outline-color;

    &:focus {
      outline-color: var(--anime-search-status-color);
    }

    &::selection {
      background-color: var(--anime-search-status-color);
    }
  }

  &.enlarged {
    padding: 0 0.5rem;

    & input {
      box-shadow: 0 0 1rem 0 hsl(0, 0%, 0%);
    }
  }
}

.results {
  position: relative;
  max-width: var(--search-width);
  width: 100%;
  flex-shrink: 0;
}

.resultsList {
  padding: var(--header-height) 1rem 1rem;
}

.status {
  padding-top: calc(var(--header-height) - 1rem);
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  /* filter: drop-shadow(0 0 0.25rem var(--anime-search-status-color)); */

  &:global {
    animation-name: appear;
    animation-duration: var(--transition-duration-slow);
    animation-fill-mode: backwards;
  }

  &.loading {
    & .statusIcon {
      &:global {
        animation-name: rotate;
        animation-duration: 2s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
      }
    }
  }
}

.statusIcon {
  width: 6rem;
  height: auto;

  & path {
    stroke: var(--anime-search-status-color);
    stroke-width: 1;
  }
}

.statusText {
  font-size: 1.5rem;
  font-weight: 600;
  text-transform: lowercase;
  color: var(--anime-search-status-color);

  &::selection {
    background-color: var(--anime-search-status-color);
  }
}
